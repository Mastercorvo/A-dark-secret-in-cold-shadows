[{"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx":"1","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx":"2","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\reportWebVitals.js":"3","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx":"4"},{"size":576,"mtime":1611013694564,"results":"5","hashOfConfig":"6"},{"size":4752,"mtime":1611067232162,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610727564164,"results":"8","hashOfConfig":"6"},{"size":11847,"mtime":1611067323023,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"zo3n7v",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx",[],["20","21"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx",["22"],"\nimport './App.css';\n\nimport { useState, useRef, useEffect } from 'react';\n\nimport {useImage} from 'react-image';\n\nimport Zone1 from \"./zona 1/Zone1\";\n\nconst SelenaHabla = 'https://i.ibb.co/rGM9kQR/Selena-Stickers1.png';\nconst SelenaHablaSeria = 'https://i.ibb.co/9tVZNgx/Selena-Stickers2.png';\nconst SelenaHablaTriste = 'https://i.ibb.co/P1k9ph8/Selena-Stickers5.png';\nconst SelenaDesconfia = 'https://i.ibb.co/5R6tPPQ/Selena-Stickers3.png';\nconst SelenaAvergonzada = 'https://i.ibb.co/L0TWpy5/Selena-Stickers10.png';\n\nconst Selenas ={SelenaHabla, SelenaHablaSeria, SelenaHablaTriste, SelenaDesconfia, SelenaAvergonzada}\n\nfunction App() {\n\n  useImage({srcList:[SelenaHabla, SelenaHablaSeria, SelenaHablaTriste, SelenaDesconfia, SelenaAvergonzada]});\n\n  const [TEXT, setTEXT] = useState('');\n\n  const [avatar, setAvatar] = useState('');\n  const [newFoto, setNewFoto] = useState(false);\n  const [showText, setShowText] = useState(false);\n\n  const writing = useRef(false);\n  const arrayTexts = useRef([]);\n  const currentText = useRef('');\n  const currentNowWriting = useRef(false);\n  const arrayOfTimeOuts = useRef([]);\n\n  const animationAvatarStart = useRef(false);\n\n  function inputText(array){\n\n    if(writing.current) return false;\n\n    writing.current = true;\n\n    setShowText(true);\n\n    for(let i = 0; i < array.length ;i++){\n\n      arrayTexts.current[i] = ()=>later(array[i]);\n\n    }\n\n    function later(_DATA){\n\n      // Animation code\n      setTimeout(() => {\n        \n        setNewFoto(()=>true);\n\n      }, 0);\n      animationAvatarStart.current = true;\n\n      // Code\n\n      currentNowWriting.current = true;\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n      \n      let DATA = _DATA?_DATA:{};\n      \n      let { text, speed, replace, wait, img } = DATA;\n      \n      if(speed === undefined) speed = 40;\n      if(replace === undefined) replace = true;\n      if(replace){\n\n        setTEXT(()=>'');\n\n      }\n\n      setAvatar(()=>Selenas[img])\n\n      if(wait === undefined) wait = 0;\n      \n      currentText.current = text.join``;\n\n      let textModify = '';\n\n      let textOriginal = ''\n\n      if(replace){\n\n        textModify = text[0] + ' _';\n  \n        textOriginal = text[0];\n\n      }else{\n\n        textModify = TEXT + text[0] + ' _';\n  \n        textOriginal = TEXT + text[0];\n\n      }\n\n      for(let i = 0; i <= wait/100 ;i++){\n\n        setTimeout(()=>{\n\n          if((i%2) === 0){\n\n            setTEXT(()=>textModify);\n\n          }else{\n\n            setTEXT(()=>textOriginal);\n\n          }\n\n          if(i === (wait/100)) continueText();\n\n        }, 100 * i);\n\n      }\n\n      function continueText(){\n\n        setTEXT(()=>textOriginal);\n\n        for(let i = 0; i < text[1].length;i++){\n    \n          arrayOfTimeOuts.current.push(setTimeout(()=>{\n    \n            setTEXT(v=>v+text[1][i]);\n    \n            if(i === (text[1].length - 1)){\n\n              currentNowWriting.current = false;\n\n              if(!animationAvatarStart.current) setNewFoto(()=>false);\n\n            }\n    \n          }, speed * i))\n    \n        }\n  \n      }\n      \n    }\n    \n    arrayTexts.current.shift()();\n\n  }\n\n  useEffect(()=>{\n\n    inputText([{text:['— Selena: ','Haa... ¿Dónde estoy?'], img: 'SelenaHablaTriste'},\n    {text:['— Selena: ','Haa... ¿Dónde232323 estoy?'], img: 'SelenaHablaTriste'},\n  {text:['— Selena: ','No sé como llegue aquí pero debo salir rapido.'], img: 'SelenaHablaSeria'}]);\n\n  }, []);\n\n  const count = useRef(0);\n\n  function textHandler(){\n\n    if(currentNowWriting.current){\n\n      setNewFoto(()=>false);\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n\n      setTEXT(()=>currentText.current);\n\n      currentNowWriting.current = false\n\n      return false;\n\n    }\n\n    if(arrayTexts.current.length === 0) count.current = 1\n    \n    const Element = arrayTexts.current.shift();\n    \n    setNewFoto(()=>false);\n\n    Element && Element();\n\n    if(count.current === 1) {\n\n      setShowText(false);\n\n      writing.current = false;\n\n      currentText.current = '';\n\n      count.current = 0;\n    \n    }\n\n  }\n\n  return (\n\n      <div className=\"App\">\n        <div className=\"inventario-icon\"></div>\n        <Zone1 inputText={inputText}/>\n        <div className=\"texto\" onClick={textHandler} style={{display:showText?'block':'none'}}>\n        {TEXT}\n        <div className={'foto ' + (newFoto?'boom':'')} onAnimationEnd={()=>{\n\n          setNewFoto(()=>false)\n\n          animationAvatarStart.current = false;\n          \n          }} style={{backgroundImage: `url(${avatar})`} }></div>\n\n        </div>\n\n      </div>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\reportWebVitals.js",[],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":162,"column":6,"nodeType":"29","endLine":162,"endColumn":8,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inputText'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [inputText]",{"range":"36","text":"37"},[3495,3497],"[inputText]"]