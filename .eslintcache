[{"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx":"1","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx":"2","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\reportWebVitals.js":"3","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx":"4","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\sala\\Sala.jsx":"5"},{"size":576,"mtime":1611013694564,"results":"6","hashOfConfig":"7"},{"size":11288,"mtime":1611192105394,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610727564164,"results":"9","hashOfConfig":"7"},{"size":3475,"mtime":1611191865598,"results":"10","hashOfConfig":"7"},{"size":3440,"mtime":1611191985668,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zo3n7v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx",[],["25","26"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx",["27","28","29"],"\nimport './App.css';\n\nimport { useState, useRef, useEffect, useLayoutEffect } from 'react';\n\nimport ReactPlayer from 'react-player';\n\nimport Zone1 from './zona 1/Zone1';\n\nimport Sala from './sala/Sala'\n\nimport System from './system.svg';\n\n// Selena\n\nconst SelenaHabla = 'https://i.ibb.co/4f6dxLH/selena1.png';\nconst SelenaHablaSeria = 'https://i.ibb.co/dgP6TZY/selena10.png';\nconst SelenaHablaTriste = 'https://i.ibb.co/6RWdPkq/selena7.png';\nconst SelenaDesconfia = 'https://i.ibb.co/vYX4mcJ/selena9.png';\nconst SelenaAvergonzada = 'https://i.ibb.co/jRD33qx/selena2.png';\nconst SelenaFeliz = 'https://i.ibb.co/zZPGCFG/selena3.png';\n\n// Nicolas\n\nconst NicolasEncantado = 'https://i.ibb.co/Wgw9VkY/nicolas-4.png';\nconst NicolasFeliz = 'https://i.ibb.co/QfGsSJV/nicolas-3.png';\nconst NicolasHabla = 'https://i.ibb.co/FWYsVqC/nicolas-2.png';\nconst NicolasHablaFeliz = 'https://i.ibb.co/3CkQXt1/nicolas-1.png';\n\nconst Espada = 'https://i.ibb.co/r5cHjnz/espadamaekir.png';\n\n// Random\n\nconst Flecha = 'https://i.ibb.co/2ZFSfRC/Chavez-Official-portrait-photo.jpg';\n\n// Objetos\n\nconst Nota = 'https://i.ibb.co/pZc8WZJ/nota.png';\n\n//Escenarios\n\nconst Trono = 'https://i.ibb.co/80TQYBT/tronofull.png';\n\nconst Images =[[SelenaHabla, 'SelenaHabla'], [SelenaHablaSeria, 'SelenaHablaSeria'],[SelenaHablaTriste,'SelenaHablaTriste'], [SelenaDesconfia, 'SelenaDesconfia'], [SelenaAvergonzada, 'SelenaAvergonzada'],\n[System, 'system'],[Trono, 'trono'], [NicolasEncantado, 'NicolasEncantado'], [NicolasFeliz, 'NicolasFeliz'],\n[NicolasHabla, 'NicolasHabla'], [NicolasHablaFeliz,'NicolasHablaFeliz'],[SelenaFeliz, 'SelenaFeliz'],\n[Flecha, 'flecha'], [Espada, 'espada'], [Nota, 'nota']];\n\nfunction App() {\n\n  const ObjetImages = useRef({});\n\n  const [isLoad, setIsLoad] = useState(true);\n  const [countImages, setCountImages] = useState(0);\n  const [countImagesLoad, setCountImagesLoad] = useState(0);\n  const [onPlay, setOnplay] = useState(false);\n  const [showPlayScreen, setShowPlayScreen] = useState(true);\n\n  const [zonesArrow, setZonesArrow] = useState([]);\n  const [zone, setZone] = useState('trono')\n\n  const [inventoryDescription, setInventoryDescription] = useState('');\n  const [showInventoryDescription, setShowInventoryDescription] = useState(false);\n\n  const cacheImages = async (arr) =>{\n\n    setCountImages(()=>arr.length)\n\n    const promises = await arr.map(([link, name])=>{\n  \n      return new Promise( resolve =>{\n\n        fetch(link).then(result=>{\n          \n          return result.blob();\n        }).then(result=>{\n          \n          console.log('hola');\n          setCountImagesLoad(v=>v+1);\n          resolve([name, URL.createObjectURL(result)]);\n\n        })\n\n      })\n  \n    });\n\n    \n    ObjetImages.current = {...Object.fromEntries(await Promise.all(promises)), ...ObjetImages.current}\n    \n    setOnplay(()=>true);\n    \n    setIsLoad(false);\n\n  }\n  \n  useLayoutEffect(()=>{\n    \n    cacheImages(Images);\n\n  }, []);\n\n  const [TEXT, setTEXT] = useState('');\n\n  const [avatar, setAvatar] = useState('');\n  const [newFoto, setNewFoto] = useState(false);\n  const [showText, setShowText] = useState(false);\n\n  const writing = useRef(false);\n  const arrayTexts = useRef([]);\n  const currentText = useRef('');\n  const currentNowWriting = useRef(false);\n  const arrayOfTimeOuts = useRef([]);\n\n  const [inventario, setInventario] = useState({});\n\n  const [showInventario, setShowInventario] = useState(false);\n\n  const animationAvatarStart = useRef(false);\n\n  const currentAnyText = useRef(false);\n\n  function inputText(array){\n\n    if(writing.current) return false;\n    \n    currentAnyText.current = true;\n\n    writing.current = true;\n\n    setShowText(true);\n\n    for(let i = 0; i < array.length ;i++){\n\n      arrayTexts.current[i] = ()=>later(array[i]);\n\n    }\n\n    function later(_DATA){\n\n      // Animation code\n\n      setAvatar(()=>{\n\n        if(!img) return ObjetImages.current['system']\n\n        return ObjetImages.current[img]\n      \n      });\n\n      setTimeout(() => {\n        \n        setNewFoto(()=>true);\n\n      }, 0);\n      animationAvatarStart.current = true;\n\n      // Code\n\n      currentNowWriting.current = true;\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n      \n      let DATA = _DATA?_DATA:{};\n      \n      let { text, speed, replace, wait, img } = DATA;\n      \n      if(speed === undefined) speed = 40;\n      if(replace === undefined) replace = true;\n      if(replace){\n\n        setTEXT(()=>'');\n\n      }\n      if(wait === undefined) wait = 0;\n      \n      currentText.current = text.join``;\n\n      let textModify = '';\n\n      let textOriginal = ''\n\n      if(replace){\n\n        textModify = text[0] + ' _';\n  \n        textOriginal = text[0];\n\n      }else{\n\n        textModify = TEXT + text[0] + ' _';\n  \n        textOriginal = TEXT + text[0];\n\n      }\n\n      for(let i = 0; i <= wait/100 ;i++){\n\n        setTimeout(()=>{\n\n          if((i%2) === 0){\n\n            setTEXT(()=>textModify);\n\n          }else{\n\n            setTEXT(()=>textOriginal);\n\n          }\n\n          if(i === (wait/100)) continueText();\n\n        }, 100 * i);\n\n      }\n\n      function continueText(){\n\n        setTEXT(()=>textOriginal);\n\n        for(let i = 0; i < text[1].length;i++){\n    \n          arrayOfTimeOuts.current.push(setTimeout(()=>{\n    \n            setTEXT(v=>v+text[1][i]);\n    \n            if(i === (text[1].length - 1)){\n\n              currentNowWriting.current = false;\n\n              if(!animationAvatarStart.current) setNewFoto(()=>false);\n\n            }\n    \n          }, speed * i))\n    \n        }\n  \n      }\n      \n    }\n    \n    arrayTexts.current.shift()();\n\n  }\n\n  function first(){\n\n    addItem('flecha', 'Un comandante que estará siempre en nuestro corazones.', 'Un Chavez');\n    addItem('espada', '¡La legendaria espada de tungsteno! Este objeto no puede ser utilizado aquí.', 'Maekir');\n\n    inputText([{text:['— Nicolás:',' Es un gusto tenerte por aquí Selena, me alegra mucho que vengas a visitar el castillo. '], img: 'NicolasHabla'},\n    {text:['— Selena:',' Gracias a ti por dejarme venir.'], img: 'SelenaFeliz'},\n    {text:['— Nicolás:',' ¿Que deseas hacer por aquí? '], img: 'NicolasEncantado'},\n    {text:['— Selena:',' Vengo a pasear y conocer un poco ¿No hay problema con que camine por el castillo un poco? '], img: 'SelenaFeliz'},\n    {text:['— Nicolás:',' ¡No hay ningún problema en lo absoluto! Confío en tí pero solo no vayas a donde los guardias estén en la puerta.'], img: 'NicolasEncantado'},\n    {text:['— Nicolás:',' Si necesitas algo házmelo saber, estaré atendiendo unos asuntos. *Nicolás se va* '], img: 'NicolasHabla'},\n    {text:['— Selena:',' Bien... Ya es hora de buscar pruebas contra Nicole. '], img: 'SelenaHablaSeria'},])\n\n  }\n\n  const count = useRef(0);\n\n  function textHandler(){\n\n    if(currentNowWriting.current){\n\n      setNewFoto(()=>false);\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n\n      setTEXT(()=>currentText.current);\n\n      currentNowWriting.current = false\n\n      return false;\n\n    }\n\n    if(arrayTexts.current.length === 0) count.current = 1\n    \n    const Element = arrayTexts.current.shift();\n    \n    setNewFoto(()=>false);\n\n    Element && Element();\n\n    if(count.current === 1) {\n\n      setShowText(false);\n\n      currentAnyText.current = false\n\n      writing.current = false;\n\n      currentText.current = '';\n\n      count.current = 0;\n    \n    }\n\n  }\n\n  const [textPlay, setTextPlay] = useState('READY?');\n  const [FINAL, setFINAL] = useState(false);\n\n  function addItem(image, description, name, position){\n\n    function onClick(){\n\n      setInventoryDescription(description);\n\n      setShowInventoryDescription(()=>true);\n\n    }\n\n    setInventario((inv)=>{\n\n      const copy = {...inv}\n\n      copy[image] = (<div className=\"item\" onClick={onClick}>\n\n        <div className=\"image\" style={{backgroundImage:`url(${ObjetImages.current[image]})`}}></div>\n\n        <p className=\"name\">{name}</p>\n\n      </div>);\n  \n      return copy;\n      \n  })\n\n  }\n\n  function buttonPlayHandler(){\n\n    setShowPlayScreen(false);\n          \n    first();\n\n  }\n\n  function inventoryDescriptionHandler(){\n\n    setShowInventoryDescription(()=>false)\n\n  }\n\n  function closeInventoryHandler(){\n\n    setShowInventario(false);\n    setShowInventoryDescription(()=>false);\n\n  }\n\n  function showInventoryHandler(){\n\n    if(currentAnyText.current) return false;\n\n    setShowInventario(true);\n\n  }\n\n  function leftHandler() {\n\n    if(currentAnyText.current) return false;\n\n    setZone(()=>zonesArrow[0]);\n    \n  }\n\n  function rightHandler() {\n    \n    if(currentAnyText.current) return false;\n\n    setZone(()=>zonesArrow[1]);\n\n  }\n\n  if(isLoad){\n\n    return <div className=\"load\">\n\n      <h1>Unfinished Selena Game (Protoptipe)</h1>\n\n      <span>Un juego original del estudio:</span>\n      <div className=\"container-logos\">\n        <div className=\"logo\"></div>\n        <div className=\"logo2\"></div>\n      </div>\n\n      <p>Cargando...</p>\n\n      <div className=\"bar\"><div style={{width:`${(100*countImagesLoad)/countImages}%`}}></div></div>\n      \n    </div>\n\n  }\n\n  return (\n\n      <div className=\"App\">\n        {!showPlayScreen && <ReactPlayer  url=\"https://www.youtube.com/watch?v=SaCheA6Njc4\" loop playing={true} width=\"0\" height=\"0\"/>}\n\n        <div className=\"left arrow\" hidden={!zonesArrow[0]} onClick={leftHandler}></div>\n        <div className=\"right arrow\" hidden={!zonesArrow[1]} onClick={rightHandler}></div>\n\n        <div className=\"play\"style={{display:showPlayScreen?'flex':'none'}} onClick={buttonPlayHandler}><p hidden={!onPlay} onMouseOut={()=>setTextPlay('READY?')} onMouseOver={()=>setTextPlay('GO!')} >{textPlay}</p>\n  \n        </div>\n        <div className=\"inventario-icon\" onClick={showInventoryHandler}></div>\n        <div className=\"inventario\" style={{display:showInventario?'flex':'none'}}>\n\n          <div className=\"description\" style={{display:showInventoryDescription?'grid':'none'}} onClick={inventoryDescriptionHandler}>\n            <div className=\"title\"><h3>Descripción:</h3></div>\n            <p className=\"first\">{inventoryDescription || 'Example'}</p> \n            <p className=\"close\">Click para cerrar la descripción.</p>\n            </div>\n\n          <p className=\"close\" onClick={closeInventoryHandler}>Cerrar</p>\n\n          <div className=\"container\">\n\n            {Object.entries(inventario).map(e=>e[1])}\n\n          </div>\n\n        </div>\n        <Zone1 setZonesArrow={setZonesArrow} zone={zone} ObjetImages={ObjetImages} setFINAL={setFINAL} addItem={addItem} inputText={inputText} inventario={inventario} currentAnyText={currentAnyText}/>\n        <Sala setZonesArrow={setZonesArrow} ObjetImages={ObjetImages} zone={zone}/>\n\n        <div className=\"texto \" onClick={textHandler} style={{display:showText?'grid':'none'}}>\n        <div className='foto' onAnimationEnd={()=>{\n          \n          setNewFoto(()=>false);\n\n          animationAvatarStart.current = false;\n          \n          }} style={{backgroundImage: `url(${avatar})`} }></div>\n        \n\n          <div className=\"text-container\"><p>{TEXT}</p></div>\n\n        </div>\n\n      </div>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\reportWebVitals.js",[],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx",["30","31","32"],"\r\nimport './zone1.css';\r\n\r\nimport { useRef, useEffect, useState } from 'react';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst NOTA_TEXT = 'Para que no se me olvide los números son... La cantidad de libros rojos en el librero. El segundo número de mi cumpleaños. La cantidad de árboles en el pueblo. Y un número que solo yo sé  >:)'\r\n\r\nfunction Zone1({inputText, addItem, currentAnyText, inventario, setFINAL, ObjetImages, zone, setZonesArrow}) {\r\n\r\n    function tronoHandler(){\r\n\r\n      inputText([{\r\n      text:['— Selena: ','No puedo creer que sentarse en ese trono le de tanto poder a una persona...'], img:'SelenaHablaSeria'}, \r\n      {text:['— Selena: ','Ahí debería estar el papá de Nicolás y Nicole pero realmente nunca lo he visto en persona.'], img:'SelenaHablaTriste'}])\r\n\r\n    }\r\n\r\n    function alfombraHandler(){\r\n\r\n      inputText([{\r\n        text:['— Selena: ','El suelo debajo de esta alfombra se siente hueco, revisaré más tarde.'], img:'SelenaHablaSeria'}])\r\n\r\n    }\r\n\r\n    const [showNota, setShowNota] = useState(false);\r\n\r\n    function notaHandler(){\r\n\r\n      if(currentAnyText.current) return false;\r\n\r\n      setShowNota(()=>true);\r\n\r\n    }\r\n\r\n    function closeNota(){\r\n\r\n      setShowNota(()=>false);\r\n\r\n      if(inventario['nota']) return false;\r\n\r\n      addItem('nota', NOTA_TEXT, 'Nota de la sal del trono')\r\n\r\n      inputText([{\r\n        text:['— Selena: ','Tal ves esta información me sirva luego.'], img:'SelenaHablaSeria'}])\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n      if(zone === 'trono') setZonesArrow(()=>['sala', 'pueblo']);\r\n\r\n    },[zone])\r\n\r\n    if(zone !== 'trono') return false;\r\n\r\n    return (<div className=\"Zone1\">\r\n\r\n      <div className=\"nota\" onClick={closeNota} style={{display:showNota?'flex':'none'}}>\r\n\r\n        <p>{NOTA_TEXT}</p>\r\n\r\n      </div>\r\n      \r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      id=\"svg8\"\r\n      width=\"1920\"\r\n      height=\"1080\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 508 285.75\"\r\n      className=\"main-svg\"\r\n    >\r\n      <image\r\n          id=\"image860\"\r\n          width=\"508\"\r\n          height=\"285.75\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          fill=\"none\"\r\n          stroke=\"none\"\r\n          preserveAspectRatio=\"none\"\r\n          href={ObjetImages.current['trono']}\r\n      ></image>\r\n      <g\r\n        id=\"layer1\"\r\n        fill=\"#000\"\r\n        fillOpacity=\"1\"\r\n        stroke=\"none\"\r\n        strokeLinecap=\"butt\"\r\n        strokeLinejoin=\"miter\"\r\n        strokeOpacity=\"1\"\r\n        strokeWidth=\"0.265\"\r\n      >\r\n        <path\r\n          id=\"trono\"\r\n          onClick={tronoHandler}\r\n          d=\"M250.22 66.146l-16.253 9.071-21.166 20.789-3.024 26.836 5.67 34.018-13.23 6.048-1.512 18.899.756 33.64 16.631 5.67 44.223-.379 35.908-.756 2.646-34.018-3.78-24.946-13.607-.756 4.914-51.405-14.363-28.726-9.45.378z\"\r\n          opacity=\"0\"\r\n        ></path>\r\n        <path\r\n          id=\"alfombra\"\r\n          onClick={alfombraHandler}\r\n          d=\"M316.185 285.75l-25.658-63.916-75.637.267-28.063 63.649z\"\r\n          opacity=\"0\"\r\n        ></path>\r\n        <path\r\n          id=\"nota\"\r\n          onClick={notaHandler}\r\n          d=\"M433.066 101.96l-3.969 1.133-1.511 7.843 2.362 7.37 4.725-.094.189-13.418z\"\r\n          opacity=\"0\"\r\n        ></path>\r\n        <path\r\n          id=\"puerta\"\r\n          d=\"M157.238 105.455l-4.82.378.095 32.979 5.009 3.118z\"\r\n          opacity=\"0\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n\r\n\r\n    </div>)\r\n    \r\n}\r\n\r\nexport default Zone1;","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\sala\\Sala.jsx",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":28,"nodeType":"40","messageId":"41","endLine":4,"endColumn":37},{"ruleId":"38","severity":1,"message":"42","line":106,"column":10,"nodeType":"40","messageId":"41","endLine":106,"endColumn":17},{"ruleId":"38","severity":1,"message":"43","line":313,"column":10,"nodeType":"40","messageId":"41","endLine":313,"endColumn":15},{"ruleId":"38","severity":1,"message":"44","line":4,"column":10,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"38","severity":1,"message":"45","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":54,"column":7,"nodeType":"48","endLine":54,"endColumn":9,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":9,"column":7,"nodeType":"48","endLine":9,"endColumn":13,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'newFoto' is assigned a value but never used.","'FINAL' is assigned a value but never used.","'useRef' is defined but never used.","'ReactPlayer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setZonesArrow' and 'zone'. Either include them or remove the dependency array. If 'setZonesArrow' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["54"],"React Hook useEffect has a missing dependency: 'setZonesArrow'. Either include it or remove the dependency array. If 'setZonesArrow' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"56","fix":"58"},"Update the dependencies array to be: [setZonesArrow, zone]",{"range":"59","text":"60"},{"range":"61","text":"60"},[1571,1573],"[setZonesArrow, zone]",[215,221]]