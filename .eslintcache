[{"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\menu\\Menu.jsx":"1","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx":"2","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx":"3","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx":"4","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\sala\\Sala.jsx":"5","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\pueblo\\Pueblo.jsx":"6","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\cuarto\\Cuarto.jsx":"7"},{"size":2818,"mtime":1612362268906,"results":"8","hashOfConfig":"9"},{"size":19019,"mtime":1612373913317,"results":"10","hashOfConfig":"9"},{"size":576,"mtime":1611013694564,"results":"11","hashOfConfig":"9"},{"size":7048,"mtime":1612374343737,"results":"12","hashOfConfig":"9"},{"size":37086,"mtime":1612370627638,"results":"13","hashOfConfig":"9"},{"size":41082,"mtime":1612215779576,"results":"14","hashOfConfig":"9"},{"size":9344,"mtime":1611941587050,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zo3n7v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\menu\\Menu.jsx",["31","32","33","34"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\App.jsx",["35","36","37","38","39","40","41","42","43"],"\nimport './App.css';\n\nimport { useState, useRef, useEffect, useLayoutEffect, useMemo, useCallback } from 'react';\n\nimport ReactPlayer from 'react-player';\n\nimport Zone1 from './zona 1/Zone1';\n\nimport Sala from './sala/Sala';\n\nimport Pueblo from './pueblo/Pueblo'\n\nimport System from './system.svg';\n\nimport Moment from './moment.svg';\n\nimport Nota from './fotos/trono/nota.svg';\n\nimport CuartoZone from './cuarto/Cuarto'\n\nimport imgKey from './cuarto/svg/llave.svg';\n\nimport imgCandy from './cuarto/svg/dulces.svg';\n\nimport imgKeyOther from './sala/svg/key.svg';\n\nimport Cofre from './sala/svg/cofre.svg';\n\nimport Separador from './sala/svg/separador.svg';\n\nimport Recibo from './pueblo/svg/recivo.svg';\n\nimport SmallKey from './pueblo/svg/key.svg';\n\nimport KeyUltima from './sala/svg/keyUltima.svg';\n\nimport Menu from './menu/Menu';\n\nimport Quien from \"./quien.svg\";\n\n// Selena\n\nconst SelenaHabla = 'https://i.ibb.co/4f6dxLH/selena1.png';\nconst SelenaHablaSeria = 'https://i.ibb.co/dgP6TZY/selena10.png';\nconst SelenaHablaTriste = 'https://i.ibb.co/6RWdPkq/selena7.png';\nconst SelenaDesconfia = 'https://i.ibb.co/vYX4mcJ/selena9.png';\nconst SelenaAvergonzada = 'https://i.ibb.co/jRD33qx/selena2.png';\nconst SelenaFeliz = 'https://i.ibb.co/zZPGCFG/selena3.png';\n\n// Nicolas\n\nconst NicolasEncantado = 'https://i.ibb.co/Wgw9VkY/nicolas-4.png';\nconst NicolasFeliz = 'https://i.ibb.co/QfGsSJV/nicolas-3.png';\nconst NicolasHabla = 'https://i.ibb.co/FWYsVqC/nicolas-2.png';\nconst NicolasHablaFeliz = 'https://i.ibb.co/3CkQXt1/nicolas-1.png';\n\nconst Espada = 'https://i.ibb.co/r5cHjnz/espadamaekir.png';\n\n// Random\n\nconst Flecha = 'https://i.ibb.co/2ZFSfRC/Chavez-Official-portrait-photo.jpg';\n\n// Objetos\n\nconst Corona = 'https://i.ibb.co/C7fdkzf/Corona-Nicole.png'\nconst MujerMisteriosa = 'https://i.ibb.co/6N3Pv5k/foto.png';\nconst Carta = 'https://i.ibb.co/MCLBQSW/carta.png'\nconst Notat = 'https://i.ibb.co/cXbZp2M/notat.png';\nconst chica = 'https://i.ibb.co/ZXmYDVS/foto-dentro-del-cuaderno-azul-con-candado.png';\n\n//Escenarios\n\nconst Trono = 'https://i.ibb.co/80TQYBT/tronofull.png';\nconst SalaImg = 'https://i.ibb.co/jZSXYtD/sala-de-estar-full.png';\nconst SalaA = 'https://i.ibb.co/Zc6j7Np/Pasillo-amanecer.png'\nconst SalaN = 'https://i.ibb.co/sQ3QSjF/Pasillo-noche.png'\nconst SalaT = 'https://i.ibb.co/R0wc2wd/Pasillo-atardecer.png'\n\nconst PuebloImg = 'https://i.ibb.co/pbS6J14/fondo-sin-nubes.png';\nconst PuebloSinSombraImg = 'https://i.ibb.co/60WL1cf/fondo-sin-nubes-y-sin-sombra-misteriosa.png';\nconst PuebloImgAmanecer = 'https://i.ibb.co/v4s1s7F/pueblo-amanecer.png';\nconst PuebloImgNoche = 'https://i.ibb.co/ftZQ8kv/pueblo-noche.png';\nconst PuebloImgAtardecer = 'https://i.ibb.co/YBGJSR8/pueblo-atardecer.png';\n\nconst Cuarto =\"https://i.ibb.co/bgpJnpg/Cuarto-Nicolas.png\"\nconst CuartoSinLlave =\"https://i.ibb.co/FD2yYXW/Sin-llave.png\"\nconst CuartoSinDulces =\"https://i.ibb.co/TPWzYcq/sin-dulce.png\"\nconst CuartoSinNada =\"https://i.ibb.co/8XFdhmP/Sin-dulce-y-sin-llave.png\"\n\n//Menu\n\nconst FondoMenu = 'https://i.ibb.co/Pjp6n6D/fondo-menu.png';\nconst LogoP = 'https://i.ibb.co/RHY4xpb/logoconsombra.png';\nconst nubesM = 'https://i.ibb.co/3WD9jgm/nubes-menu.png';\nconst SelenaM = 'https://i.ibb.co/PrtRGvH/Selena-XD.png';\nconst LogoGame = 'https://i.ibb.co/cXf1vXN/Logo-del-juego.png'\n\n//Code\n\nconst Images =[[SelenaHabla, 'SelenaHabla'], [SelenaHablaSeria, 'SelenaHablaSeria'],[SelenaHablaTriste,'SelenaHablaTriste'], [SelenaDesconfia, 'SelenaDesconfia'], [SelenaAvergonzada, 'SelenaAvergonzada'],\n[System, 'system'],[Trono, 'trono'], [NicolasEncantado, 'NicolasEncantado'], [NicolasFeliz, 'NicolasFeliz'],\n[NicolasHabla, 'NicolasHabla'], [NicolasHablaFeliz,'NicolasHablaFeliz'],[SelenaFeliz, 'SelenaFeliz'],\n[Flecha, 'flecha'], [Espada, 'espada'], [Nota, 'nota'], [SalaImg, 'sala'], [PuebloImg, 'pueblo'], [Moment, 'moment'], [PuebloSinSombraImg, 'puebloSinSombra'],[Cuarto,'cuarto'],[CuartoSinDulces, 'cuartoSinDulces'],\n[CuartoSinLlave, 'cuartoSinLlave'], [CuartoSinNada, 'cuartoSinNada'], [imgKey, 'llave'], [imgCandy, 'dulces'], [MujerMisteriosa, 'MujerMisteriosa'], [imgKeyOther, 'otraLlave'], [Cofre, 'cofre'], [Separador, 'separador'],\n[Recibo, 'recibo'], [SmallKey, 'smallKey'], [Carta, 'carta'], [Notat, 'notat'], [chica, 'chica'], [SalaA, 'salaA'], [SalaN, 'salaN'], [SalaT, 'salaT'], [PuebloImgAmanecer, 'puebloA'], [PuebloImgNoche, 'puebloN'], [PuebloImgAtardecer, 'puebloT'], [Corona, 'corona'], [KeyUltima, 'ultimaLlave'], [FondoMenu, 'fondoMenu'], [LogoP, 'logoP'], [nubesM, 'nubesM'], [SelenaM, 'selenaM'], [LogoGame, 'logoGame'], [Quien, 'quien']];\n\nfunction App() {\n\n  const ObjetImages = useRef({});\n\n  const [actions, setActions] = useState({})\n\n  const [isLoad, setIsLoad] = useState(true);\n  const [countImages, setCountImages] = useState(0);\n  const [countImagesLoad, setCountImagesLoad] = useState(0);\n  const [onPlay, setOnplay] = useState(false);\n  const [showPlayScreen, setShowPlayScreen] = useState(true);\n\n  const [zonesArrow, setZonesArrow] = useState([]);\n  const [zone, setZone] = useState('trono')\n\n  const postText = useRef([]);\n\n  const [inventoryDescription, setInventoryDescription] = useState('');\n  const [showInventoryDescription, setShowInventoryDescription] = useState(false);\n\n  const [checkZoneMark, setCheckZoneMark] = useState('')\n\n  const cacheImages = async (arr) =>{\n\n    setCountImages(()=>arr.length)\n\n    const promises = await arr.map(([link, name])=>{\n  \n      return new Promise( resolve =>{\n\n        fetch(link, {method:'GET'}).then(result=>{\n          \n          return result.blob();\n        }).then(result=>{\n          setCountImagesLoad(v=>v+1);\n          resolve([name, URL.createObjectURL(result)]);\n\n        })\n\n      })\n  \n    });\n\n    \n    ObjetImages.current = {...Object.fromEntries(await Promise.all(promises)), ...ObjetImages.current}\n    \n    setOnplay(()=>true);\n    \n    setIsLoad(false);\n\n  }\n  \n  useLayoutEffect(()=>{\n    \n    cacheImages(Images);\n\n  }, []);\n\n  const [TEXT, setTEXT] = useState('');\n\n  const [avatar, setAvatar] = useState('');\n  const [newFoto, setNewFoto] = useState(false);\n  const [showText, setShowText] = useState(false);\n\n  const writing = useRef(false);\n  const arrayTexts = useRef([]);\n  const currentText = useRef('');\n  const currentNowWriting = useRef(false);\n  const arrayOfTimeOuts = useRef([]);\n\n  const [inventario, setInventario] = useState({});\n\n  const [showInventario, setShowInventario] = useState(false);\n\n  const animationAvatarStart = useRef(false);\n\n  const currentAnyText = useRef(false);\n\n  function inputText(array){\n\n    if(writing.current) return false;\n    \n    currentAnyText.current = true;\n\n    writing.current = true;\n\n    setShowText(true);\n\n    for(let i = 0; i < array.length; i++){\n\n      arrayTexts.current[i] = ()=>later(array[i]);\n\n    }\n\n    function later(_DATA){\n\n      // Animation code\n\n      let DATA = _DATA?_DATA:{};\n      \n      let { text, speed, replace, wait, img } = DATA;\n\n      setAvatar(()=>{\n\n        if(!img) return ObjetImages.current['system'];\n\n        return ObjetImages.current[img];\n      \n      });\n\n      setTimeout(() => {\n        \n        setNewFoto(()=>true);\n\n      }, 0);\n      animationAvatarStart.current = true;\n\n      // Code\n\n      currentNowWriting.current = true;\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n      \n      if(speed === undefined) speed = 40;\n      if(replace === undefined) replace = true;\n      if(replace){\n\n        setTEXT(()=>'');\n\n      }\n      if(wait === undefined) wait = 0;\n      \n      currentText.current = text.join``;\n\n      let textModify = '';\n\n      let textOriginal = ''\n\n      if(replace){\n\n        textModify = text[0] + ' _';\n  \n        textOriginal = text[0];\n\n      }else{\n\n        textModify = TEXT + text[0] + ' _';\n  \n        textOriginal = TEXT + text[0];\n\n      }\n\n      for(let i = 0; i <= wait/100 ;i++){\n\n        setTimeout(()=>{\n\n          if((i%2) === 0){\n\n            setTEXT(()=>textModify);\n\n          }else{\n\n            setTEXT(()=>textOriginal);\n\n          }\n\n          if(i === (wait/100)) continueText();\n\n        }, 100 * i);\n\n      }\n\n      function continueText(){\n\n        setTEXT(()=>textOriginal);\n\n        for(let i = 0; i < text[1].length;i++){\n    \n          arrayOfTimeOuts.current.push(setTimeout(()=>{\n    \n            setTEXT(v=>v+text[1][i]);\n    \n            if(i === (text[1].length - 1)){\n\n              currentNowWriting.current = false;\n\n              if(!animationAvatarStart.current) setNewFoto(()=>false);\n\n            }\n    \n          }, speed * i))\n    \n        }\n  \n      }\n      \n    }\n    \n    arrayTexts.current.shift()();\n\n  }\n\n  function first(){\n\n    addItem('flecha', 'Un comandante que estará siempre en nuestro corazones.', 'Un Chavez');\n    addItem('espada', '¡La legendaria espada de tungsteno! Este objeto no puede ser utilizado aquí.', 'Maekir');\n\n    inputText([{text:['— Nicolás:',' Es un gusto tenerte por aquí Selena, me alegra mucho que vengas a visitar el castillo. '], img: 'NicolasHabla'},\n    {text:['— Selena:',' Gracias a ti por dejarme venir.'], img: 'SelenaFeliz'},\n    {text:['— Nicolás:',' ¿Que deseas hacer por aquí? '], img: 'NicolasEncantado'},\n    {text:['— Selena:',' Vengo a pasear y conocer un poco ¿No hay problema con que camine por el castillo un poco? '], img: 'SelenaFeliz'},\n    {text:['— Nicolás:',' ¡No hay ningún problema en lo absoluto! Confío en tí pero solo no vayas a donde los guardias estén en la puerta.'], img: 'NicolasEncantado'},\n    {text:['— Nicolás:',' Si necesitas algo házmelo saber, estaré atendiendo unos asuntos.'], img: 'NicolasHabla'},\n    {text:['','— Nicolás se retira de la sala.'], img: 'moment'},\n    {text:['— Selena:',' Bien... Ya es hora de buscar pruebas contra Nicole. '], img: 'SelenaHablaSeria'},])\n\n  }\n\n  const count = useRef(0);\n\n  function textHandler(){\n\n    if(currentNowWriting.current){\n\n      setNewFoto(()=>false);\n\n      for(let i = 0;i < arrayOfTimeOuts.current.length; i++){\n        \n        clearTimeout(arrayOfTimeOuts.current[i]);\n        \n      }\n\n      setTEXT(()=>currentText.current);\n\n      currentNowWriting.current = false\n\n      return false;\n\n    }\n\n    if(arrayTexts.current.length === 0) count.current = 1\n    \n    const Element = arrayTexts.current.shift();\n    \n    setNewFoto(()=>false);\n\n    Element && Element();\n\n    if(count.current === 1) {\n\n      setShowText(false);\n\n      if(postText.current[0])postText.current.shift()();\n\n      currentAnyText.current = false\n\n      writing.current = false;\n\n      currentText.current = '';\n\n      count.current = 0;\n    \n    }\n\n  }\n\n  const [textPlay, setTextPlay] = useState('READY?');\n  const [FINAL, setFINAL] = useState(false);\n\n  function addItem(image, description, name){\n\n    function onClick(){\n\n      setInventoryDescription(description);\n\n      setShowInventoryDescription(()=>true);\n\n    }\n\n    setInventario((inv)=>{\n\n      const copy = {...inv}\n\n      copy[name] = (<div className=\"item\" onClick={onClick}>\n\n        <div className=\"image\" style={{backgroundImage:`url(${ObjetImages.current[image]})`}}></div>\n\n        <p className=\"name\">{name}</p>\n\n      </div>);\n  \n      return copy;\n      \n  })\n\n  }\n\n  const [aparece, setAparece] = useState('')\n\n  function buttonPlayHandler(){\n\n    setShowPlayScreen(false);\n\n    setAparece('aparece');\n\n  }\n\n  function inventoryDescriptionHandler(){\n\n    setShowInventoryDescription(()=>false)\n\n  }\n\n  function closeInventoryHandler(){\n\n    setShowInventario(false);\n    setShowInventoryDescription(()=>false);\n\n  }\n\n  function showInventoryHandler(){\n\n    if(currentAnyText.current) return false;\n\n    setShowInventario(true);\n\n  }\n\n  const [showCheckZone, setShowCheckZone] = useState(false);\n\n  const firstCuarto = useRef(true);\n\n  const [textCheckZone, setTextCheckZone] = useState('');\n\n  function leftHandler() {\n\n    if(currentAnyText.current) return false;\n\n    if(zonesArrow[0] === 'cuarto'){\n\n      if(firstCuarto.current){\n\n        inputText([{text:['— Selena:',' L-La habitación de Nicolás... ¿Debería entrar? No me verá nadie, creo.'], img: 'SelenaAvergonzada'}]);\n\n        postText.current.push(()=>{\n\n          setTextCheckZone(()=>'¿Piensas entrar al cuarto de Nicolas?');\n\n          setCheckZoneMark(()=>'cuarto');\n\n          setShowCheckZone(()=>true);\n\n        });\n\n        firstCuarto.current = false;\n\n      }else {\n\n        setTextCheckZone(()=>'¿Piensas entrar al cuarto de Nicolas?');\n\n        setCheckZoneMark(()=>'cuarto');\n\n        setShowCheckZone(()=>true);\n\n      }\n\n      return false\n\n    }\n\n    setZone(()=>zonesArrow[0]);\n    \n  }\n\n  function rightHandler() {\n\n    if(currentAnyText.current) return false;\n\n    if(zonesArrow[1] === 'pueblo'){\n\n      setTextCheckZone(()=>'¿Desea ir al pueblo?');\n\n      setCheckZoneMark(()=>'pueblo');\n\n      setShowCheckZone(()=>true);\n\n      return false;\n      \n    }\n\n    setZone(()=>zonesArrow[1]);\n\n  }\n  \n  //Song\n\n  const [castilloSongVolumen, setCastilloSongVolumen] = useState(1);\n\n  const [castilloSong, setCastilloSong] = useState(false);\n\n  const castilloSongElement = useRef(undefined);\n\n  useEffect(()=>{\n\n    if((zone === 'sala' || zone === 'trono' || zone === 'cuarto') && !showPlayScreen){\n\n      setCastilloSong(true);\n\n    } else setCastilloSong(false);\n\n    if(zone === 'cuarto'){\n\n      setCastilloSongVolumen(0.1);\n\n    }else setCastilloSongVolumen(1);\n\n  });\n\n  const afueraSongElement = useRef(undefined);\n\n  const [afueraSong, setAfueraSong] = useState(false);\n\n  useEffect(()=>{\n  \n    if(zone === 'pueblo') setAfueraSong(true);\n      else setAfueraSong(false);\n\n  })\n\n  const salida = useRef([]);\n\n  useEffect(() => {\n\n    document.addEventListener('keydown',({key})=>{\n\n      if(key !== 'Escape') return false;\n\n      salida.current.forEach((v)=>{\n\n        if(v) v();\n\n      })\n\n    });\n\n  }, [])\n\n  function yesCheckZone(){\n\n    setShowCheckZone(()=>false);\n\n    setZone(()=>checkZoneMark)\n\n  }\n\n  const [superTime, setSuperTime] = useState(0);\n\n  useEffect(() => {\n\n    salida.current.push(()=>{\n\n      setShowCheckZone(false);\n\n      setShowInventario(false);\n\n    });\n\n  }, [])\n\n  const [stop, setStop] = useState(false);\n\n  const [bloque, setBloque] = useState(false);\n\n  const [showIconInventory, setShowIconInventory] = useState(true)\n\n  if(isLoad){\n\n    return <div className=\"load\">\n\n      <h1>A dark secret in cold shadows</h1>\n\n      <span>Un juego original del estudio:</span>\n      <div className=\"container-logos\">\n        <div className=\"logo\"></div>\n        <div className=\"logo2\"></div>\n      </div>\n\n      <p>Cargando...</p>\n\n      <div className=\"bar\"><div style={{width:`${(100*countImagesLoad)/countImages}%`}}></div></div>\n      \n    </div>\n\n  }\n\n  function disableAll() {\n    \n    setZonesArrow([]);\n\n    setShowIconInventory(false);\n\n  }\n\n  return (\n\n      <div className=\"App\">\n\n        <div className=\"check-zone\" style={{display:showCheckZone?'flex':'none'}}>\n\n          <div className=\"container\">\n\n            <p className=\"first\">{textCheckZone}</p>\n            <div className=\"option\" onClick={yesCheckZone}><p>Sí.</p></div> <div className=\"option\" onClick={()=>setShowCheckZone(()=>false)}><p>No.</p></div>\n\n          </div>\n\n        </div>\n\n        {!stop && <ReactPlayer volume={castilloSongVolumen} url='https://soundcloud.com/breitkopf-haertel/1-movement-from-brandenburg-concerto-no-3-in-g-major-bwv-1048-by-johann-sebastian-bach' playing={castilloSong} width=\"0\" height=\"0\" onEnded={()=>{\n          castilloSongElement.current.seekTo(0, 0);\n\n            setCastilloSong(false)\n            setTimeout(()=>{\n\n              if(stop) return false;\n              \n              setCastilloSong(true)\n            \n            }, 0)\n          \n          }} ref={castilloSongElement}/>}\n        \n        {!stop && <ReactPlayer url='https://soundcloud.com/video-background-music/cold-isolation-sad-dramatic-background-music-piano-and-violin' playing={afueraSong} width=\"0\" height=\"0\" onEnded={()=>{\n          castilloSongElement.current.seekTo(0, 0);\n\n            setAfueraSong(false)\n            setTimeout(()=>{\n\n              if(stop) return false;\n              \n              setAfueraSong(true)\n            \n            }, 0)\n          \n          }} ref={afueraSongElement}/>}\n\n        <div className=\"left arrow\" hidden={!zonesArrow[0]} onClick={leftHandler}></div>\n        <div className=\"right arrow\" hidden={!zonesArrow[1]} onClick={rightHandler}></div>\n\n        <div className={\"bloque \" + aparece} hidden={bloque} onAnimationEnd={()=>{\n\n          first();\n\n          setBloque(true);\n\n        }}></div>\n\n        <Menu ObjetImages={ObjetImages} showPlayScreen={showPlayScreen} buttonPlayHandler={buttonPlayHandler}/>\n  \n        {showIconInventory && <div className=\"inventario-icon\" onClick={showInventoryHandler}></div>}\n        <div className=\"inventario\" style={{display:showInventario?'flex':'none'}}>\n\n          <div className=\"description\" style={{display:showInventoryDescription?'grid':'none'}} onClick={inventoryDescriptionHandler}>\n            <div className=\"title\"><h3>Descripción:</h3></div>\n            <p className=\"first\">{inventoryDescription || 'Example'}</p> \n            <p className=\"close\">Click para cerrar la descripción.</p>\n            </div>\n\n          <p className=\"close\" onClick={closeInventoryHandler}>Cerrar</p>\n\n          <div className=\"container\">\n\n            {Object.entries(inventario).map(e=>e[1])}\n\n          </div>\n\n        </div>\n\n        <Zone1 disableAll={disableAll} postText={postText} actions={actions} setZonesArrow={setZonesArrow} zone={zone} ObjetImages={ObjetImages} setFINAL={setFINAL} addItem={addItem} inputText={inputText} inventario={inventario} currentAnyText={currentAnyText}/>\n        <Sala setStop={setStop} salida={salida} superTime={superTime} actions={actions} inventario={inventario} postText={postText} setInventario={setInventario} setZonesArrow={setZonesArrow} ObjetImages={ObjetImages} zone={zone} inputText={inputText} currentAnyText={currentAnyText} addItem={addItem}/>\n        <Pueblo salida={salida} setSuperTime={setSuperTime} setActions={setActions} postText={postText} inputText={inputText} addItem={addItem} inventario={inventario} currentAnyText={currentAnyText} setZonesArrow={setZonesArrow} ObjetImages={ObjetImages} zone={zone}/>\n        <CuartoZone salida={salida} postText={postText} inputText={inputText} addItem={addItem} inventario={inventario} currentAnyText={currentAnyText} setZonesArrow={setZonesArrow} ObjetImages={ObjetImages} zone={zone}/>\n        <div className=\"texto\" onClick={textHandler} style={{display:showText?'grid':'none'}}>\n        <div className='foto' onAnimationEnd={()=>{\n          \n          setNewFoto(()=>false);\n\n          animationAvatarStart.current = false;\n          \n          }} style={{backgroundImage: `url(${avatar})`} }></div>\n        \n          <div className=\"text-container\"><p>{TEXT}</p></div>\n\n        </div>\n\n      </div>\n\n  );\n}\n\nexport default App;","C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\index.jsx",[],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\zona 1\\Zone1.jsx",["44"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\sala\\Sala.jsx",["45","46","47"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\pueblo\\Pueblo.jsx",["48","49","50","51"],"C:\\Users\\giga\\Documents\\unfinished-selena-game\\src\\cuarto\\Cuarto.jsx",["52","53","54"],{"ruleId":"55","severity":1,"message":"56","line":13,"column":14,"nodeType":"57","messageId":"58","endLine":13,"endColumn":22},{"ruleId":"55","severity":1,"message":"59","line":27,"column":12,"nodeType":"57","messageId":"58","endLine":27,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":29,"column":14,"nodeType":"57","messageId":"58","endLine":29,"endColumn":18},{"ruleId":"55","severity":1,"message":"61","line":35,"column":33,"nodeType":"57","messageId":"58","endLine":35,"endColumn":55},{"ruleId":"55","severity":1,"message":"62","line":4,"column":56,"nodeType":"57","messageId":"58","endLine":4,"endColumn":63},{"ruleId":"55","severity":1,"message":"63","line":4,"column":65,"nodeType":"57","messageId":"58","endLine":4,"endColumn":76},{"ruleId":"55","severity":1,"message":"64","line":117,"column":10,"nodeType":"57","messageId":"58","endLine":117,"endColumn":16},{"ruleId":"55","severity":1,"message":"65","line":169,"column":10,"nodeType":"57","messageId":"58","endLine":169,"endColumn":17},{"ruleId":"55","severity":1,"message":"66","line":378,"column":10,"nodeType":"57","messageId":"58","endLine":378,"endColumn":18},{"ruleId":"55","severity":1,"message":"67","line":378,"column":20,"nodeType":"57","messageId":"58","endLine":378,"endColumn":31},{"ruleId":"55","severity":1,"message":"68","line":379,"column":10,"nodeType":"57","messageId":"58","endLine":379,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":514,"column":3,"nodeType":"57","endLine":514,"endColumn":12,"suggestions":"71"},{"ruleId":"69","severity":1,"message":"72","line":534,"column":3,"nodeType":"57","endLine":534,"endColumn":12,"suggestions":"73"},{"ruleId":"69","severity":1,"message":"74","line":98,"column":7,"nodeType":"75","endLine":98,"endColumn":13,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"74","line":11,"column":7,"nodeType":"75","endLine":11,"endColumn":13,"suggestions":"77"},{"ruleId":"69","severity":1,"message":"78","line":297,"column":8,"nodeType":"75","endLine":297,"endColumn":19,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":311,"column":8,"nodeType":"75","endLine":311,"endColumn":10,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"74","line":28,"column":7,"nodeType":"75","endLine":28,"endColumn":13,"suggestions":"82"},{"ruleId":"55","severity":1,"message":"83","line":65,"column":25,"nodeType":"57","messageId":"58","endLine":65,"endColumn":39},{"ruleId":"69","severity":1,"message":"84","line":207,"column":8,"nodeType":"75","endLine":207,"endColumn":10,"suggestions":"85"},{"ruleId":"69","severity":1,"message":"80","line":402,"column":8,"nodeType":"75","endLine":402,"endColumn":10,"suggestions":"86"},{"ruleId":"69","severity":1,"message":"74","line":10,"column":7,"nodeType":"75","endLine":10,"endColumn":13,"suggestions":"87"},{"ruleId":"69","severity":1,"message":"88","line":64,"column":8,"nodeType":"75","endLine":64,"endColumn":29,"suggestions":"89"},{"ruleId":"69","severity":1,"message":"80","line":223,"column":8,"nodeType":"75","endLine":223,"endColumn":10,"suggestions":"90"},"no-unused-vars","'moveSkew' is defined but never used.","Identifier","unusedVar","'endA' is assigned a value but never used.","'move' is defined but never used.","'setCastilloSongVolumen' is assigned a value but never used.","'useMemo' is defined but never used.","'useCallback' is defined but never used.","'onPlay' is assigned a value but never used.","'newFoto' is assigned a value but never used.","'textPlay' is assigned a value but never used.","'setTextPlay' is assigned a value but never used.","'FINAL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCastilloSong'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [zone, showPlayScreen] as a second argument to the useEffect Hook.",["91"],"React Hook useEffect contains a call to 'setAfueraSong'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [zone] as a second argument to the useEffect Hook.",["92"],"React Hook useEffect has a missing dependency: 'setZonesArrow'. Either include it or remove the dependency array. If 'setZonesArrow' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],["94"],"React Hook useEffect has missing dependencies: 'amanecerOpacity' and 'anochecerOpacity'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'salida'. Either include it or remove the dependency array.",["96"],["97"],"'setDefaultHour' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defaultHour' and 'overlordTime'. Either include them or remove the dependency array.",["98"],["99"],["100"],"React Hook useLayoutEffect has a missing dependency: 'ObjetImages'. Either include it or remove the dependency array. Mutable values like 'countObject.current' aren't valid dependencies because mutating them doesn't re-render the component.",["101"],["102"],{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"107","fix":"114"},{"desc":"115","fix":"116"},{"desc":"112","fix":"117"},{"desc":"107","fix":"118"},{"desc":"119","fix":"120"},{"desc":"112","fix":"121"},"Add dependencies array: [zone, showPlayScreen]",{"range":"122","text":"123"},"Add dependencies array: [zone]",{"range":"124","text":"125"},"Update the dependencies array to be: [setZonesArrow, zone]",{"range":"126","text":"127"},{"range":"128","text":"127"},"Update the dependencies array to be: [amanecerOpacity, anochecerOpacity, superTime]",{"range":"129","text":"130"},"Update the dependencies array to be: [salida]",{"range":"131","text":"132"},{"range":"133","text":"127"},"Update the dependencies array to be: [defaultHour, overlordTime]",{"range":"134","text":"135"},{"range":"136","text":"132"},{"range":"137","text":"127"},"Update the dependencies array to be: [ObjetImages]",{"range":"138","text":"139"},{"range":"140","text":"132"},[13400,13400],", [zone, showPlayScreen]",[13613,13613],", [zone]",[2867,2873],"[setZonesArrow, zone]",[502,508],[8715,8726],"[amanecerOpacity, anochecerOpacity, superTime]",[8912,8914],"[salida]",[1759,1765],[6059,6061],"[defaultHour, overlordTime]",[10777,10779],[322,328],[2332,2353],"[ObjetImages]",[6493,6495]]